# Part of Odoo. See LICENSE file for full copyright and licensing details.'l

from odoo.http import Controller, request, route


class ProductConfiguratorController(Controller):

    @route()
    def get_product_configurator_values(
        self,
        product_template_id,
        quantity,
    ):
        """ Return all product information needed for the product configurator.

        :param int product_template_id: The product for which to seek information, as a
                                        `product.template` id.
        :param int quantity: The quantity of the product.
        :param int currency_id: The currency of the transaction, as a `res.currency` id.
        :param str so_date: The date of the `sale.order`, to compute the price at the right rate.
        :param int|None product_uom_id: The unit of measure of the product, as a `uom.uom` id.
        :param int|None company_id: The company to use, as a `res.company` id.
        :param int|None pricelist_id:  The pricelist to use, as a `product.pricelist` id.
        :param recordset|None product_template_attribute_value_ids: The combination of the product,
                                                                    as a `product.template.attribute
                                                                    .value` recordset.
        :param bool only_main_product: Whether the optional products should be included or not.
        :rtype: dict
        :return: A dict containing a list of products and a list of optional products information,
                 generated by :meth:`_get_product_information`.
        """
        return super().get_product_configurator_values()
