<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">

<t t-name="mail.Composer">
    <t t-set="compact" t-value="props.mode === 'compact'"/>
    <t t-set="normal" t-value="props.mode === 'normal'"/>
    <t t-set="extended" t-value="props.mode === 'extended'"/>
    <div t-ref="composer">
        <div class="o-mail-Composer d-grid flex-shrink-0 pt-0"
                t-att-class="{
                    'pb-2': extended and !props.composer.message,
                    'o-extended': extended,
                    'o-isUiSmall': ui.isSmall,
                    'p-2 pb-3 mx-1': normal,
                    'o-compact': compact,
                    'o-hasSelfAvatar': !env.inChatWindow and thread,
                    'o-focused': props.composer.isFocused,
                    'o-editing': props.composer.message,
                }" t-attf-class="{{ props.className }}">
            <!-- <div class="o-mail-Composer-sidebarMain flex-shrink-0" t-if="!compact and props.sidebar">
                <img class="o-mail-Composer-avatar o_avatar rounded" t-att-src="store.self.avatarUrl" alt="Avatar of user"/>
            </div> -->
            <div class="o-mail-Composer-coreHeader text-truncate small p-2" t-if="props.composer.thread and props.messageToReplyTo?.thread?.eq(props.composer.thread)">
                <span class="cursor-pointer" t-on-click="() => env.messageHighlight?.highlightMessage(props.messageToReplyTo.message, props.composer.thread)">
                    Replying to <b t-esc="props.messageToReplyTo.message.author?.name ?? props.messageToReplyTo.message.email_from"/>
                </span>
                <span t-if="props.messageToReplyTo.message.thread.notEq(props.composer.thread)">
                    on: <b><t t-esc="props.messageToReplyTo.message.thread.displayName"/></b>
                </span>
                <i class="fa fa-lg fa-times-circle rounded-circle p-0 ms-1 cursor-pointer" title="Stop replying" t-on-click="() => props.messageToReplyTo.cancel()"/>
            </div>
            <div class="o-mail-Composer-coreMain d-flex flex-nowrap align-items-start flex-grow-1" t-att-class="{ 'flex-column' : extended }">
                <div class="d-flex bg-view flex-grow-1 border"
                    t-att-class="{
                        'o-mail-Composer-compactContainer m-1 shadow-sm border-secondary rounded': compact and !props.composer.message,
                        'o-mobile rounded-3': isMobileOS,
                        'rounded' : normal,
                        'rounded-3 align-self-stretch' : extended,
                        'flex-column': extended or props.composer.message,
                    }"
                >
                    <div t-if="!extended" class="o-mail-Composer-moreActions o-mail-Composer-actions ms-1">
                        <div class="d-flex align-items-baseline" style="margin-top: 3px;">
                            <Dropdown position="'top-start'" menuClass="'p-0 ms-n1 mb-1 rounded-0 d-flex flex-column gap-1'">
                                <button class="btn border-0 p-1 rounded-pill" title="More actions"><i class="fa fa-lg fa-fw fa-plus-circle"/></button>
                                <t t-set-slot="content">
                                    <t t-foreach="actions.all.slice(quickActionLimit)" t-as="action" t-key="action.id">
                                        <DropdownItem t-if="action.componentCondition"><t t-component="action.component" t-props="action.componentProps"/></DropdownItem>
                                        <DropdownItem t-else="" class="'d-flex align-items-center px-2 py-1'" onSelected="action.select.bind(action)"><i class="fa-fw" t-att-class="action.icon" t-att-data-sequence="action.sequence"/><span class="mx-2" t-esc="action.label"/></DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </div>
                    </div>
                    <div class="position-relative flex-grow-1">
                        <textarea class="o-mail-Composer-input o-mail-Composer-inputStyle form-control bg-view border-0 rounded-3 shadow-none overflow-auto"
                            t-ref="textarea"
                            style="height:40px;"
                            t-on-keydown="onKeydown"
                            t-on-focusin="onFocusin"
                            t-on-focusout="() => this.props.composer.isFocused = false"
                            t-on-click="(ev) => markEventHandled(ev, 'composer.onClickTextarea')"
                            t-on-paste="onPaste"
                            t-model="props.composer.text"
                            t-att-placeholder="placeholder"
                            t-att-readOnly="!state.active"
                        />
                        <!--
                             This is an invisible textarea used to compute the composer
                             height based on the text content. We neefd it to downsize
                             the textarea properly without flicker.
                        -->
                        <textarea
                            class="o-mail-Composer-fake o-mail-Composer-inputStyle position-absolute border-0"
                            t-model="props.composer.text"
                            t-ref="fakeTextarea"
                            disabled="1"
                        />
                    </div>
                    <div class="o-mail-Composer-actions d-flex bg-view"
                        t-att-class="{
                            'me-1': compact,
                            'ms-2 me-1': normal,
                            'mx-3 border-top p-1': extended,
                            'border-top': extended or props.composer.message,
                            'rounded': !props.composer.message,
                        }"
                    >
                        <div class="d-flex flex-grow-1 align-items-baseline" style="margin-top: 3px;" t-ref="quick-actions">
                            <t t-foreach="actions.all.slice(0, quickActionLimit)" t-as="action" t-key="action.id">
                                <t t-if="action.componentCondition" t-component="action.component" t-props="action.componentProps"/>
                                <button t-else="" class="btn border-0 p-1 rounded-pill" t-att-title="action.label" t-on-click="action.select.bind(action)"><i class="fa-lg fa-fw" t-att-class="action.icon" t-att-data-sequence="action.sequence"/></button>
                            </t>
                            <!-- <button class="btn border-0 p-1 rounded-pill" t-att-class="{'bg-300': this.picker.state.picker === this.picker.PICKERS.EMOJI}" aria-label="Emojis" t-on-click="onClickAddEmoji" t-ref="emoji-button"><i class="fa fa-fw fa-smile-o"/></button> -->
                            <FileUploader t-if="allowUpload" multiUpload="true" onUploaded.bind="(data) => { attachmentUploader.uploadData(data) }">
                                <t t-set-slot="toggler">
                                    <button t-att-disabled="!state.active" class="o-mail-Composer-attachFiles d-none" title="Attach files" aria-label="Attach files" type="button" t-on-click="onClickAddAttachment" t-ref="upload-file"><i class="fa fa-fw fa-paperclip"/></button>
                                </t>
                            </FileUploader>
                            <!-- <t t-if="extended and ui.isSmall and props.composer.message" t-call="mail.Composer.sendButton"/>
                            <t t-if="!extended" t-call="mail.Composer.fullComposer"/>
                            <t t-if="hasSendButtonNonEditing" t-call="mail.Composer.sendButton"/> -->
                        </div>
                        <t t-if="extended" t-call="mail.Composer.fullComposer"/>
                    </div>
                </div>
                <div t-if="extended and !props.composer.message" class="d-flex align-items-center mt-2 gap-2">
                    <t t-call="mail.Composer.sendButton"/>
                    <span t-if="!isSendButtonDisabled and !props.composer.message" t-out="SEND_KEYBIND_TO_SEND"/>
                </div>
            </div>
            <div class="o-mail-Composer-footer overflow-auto">
                <AttachmentList
                    t-if="allowUpload and props.composer.attachments.length > 0"
                    attachments="props.composer.attachments"
                    unlinkAttachment.bind="(...args) => attachmentUploader.unlink(...args)"
                    imagesHeight="50"/>
                <Picker t-props="picker"/>
            </div>
        </div>
        <span t-if="props.composer.message" class="text-muted px-1" t-out="CANCEL_OR_SAVE_EDIT_TEXT" t-on-click="onClickCancelOrSaveEditText"/>
    </div>
    <NavigableList t-if="suggestion" class="'o-mail-Composer-suggestionList'" t-props="navigableListProps"/>
</t>

<t t-name="mail.Composer.sendButton">
    <button class="o-mail-Composer-send btn"
        t-att-class="{'btn-primary': extended, 'p-1 rounded-pill': !extended, 'btn-link': !extended, 'border-start-0 me-2': env.inDiscussApp}"
        t-on-click="sendMessage"
        t-att-disabled="isSendButtonDisabled"
        t-att-aria-label="SEND_TEXT"
    >
        <t t-if="thread and thread.model !== 'discuss.channel'" t-out="SEND_TEXT"/>
        <t t-else=""><i class="fa fa-fw fa-paper-plane-o"/></t>
    </button>
</t>

<t t-name="mail.Composer.fullComposer">
    <button t-if="props.showFullComposer and thread and thread.model !== 'discuss.channel'" class="o-mail-Composer-fullComposer btn p-1 border-0 rounded-pill" title="Full composer" aria-label="Full composer" type="button" t-on-click="onClickFullComposer" data-hotkey="shift+c">
        <i class="fa fa-fw fa-expand"/>
    </button>
</t>

    <t t-name="mail.Composer.suggestionSpecial">
        <strong class="px-2 py-1 align-self-center flex-shrink-0 text-truncate">
            <t t-esc="option.displayName"/>
        </strong>
        <em class="text-600 text-truncate align-self-center">
            <t t-esc="option.description"/>
        </em>
    </t>

    <t t-name="mail.Composer.suggestionPartner">
        <t t-set="partner" t-value="option.partner"/>
        <ImStatus t-if="partner" persona="partner"/>
        <strong class="px-2 py-1 align-self-center flex-shrink-0 text-truncate">
            <t t-esc="partner.name"/>
        </strong>
        <em t-if="partner.email" class="text-600 text-truncate align-self-center">(<t t-esc="partner.email"/>)</em>
    </t>

    <t t-name="mail.Composer.suggestionThread">
        <strong class="px-2 py-1 align-self-center flex-shrink-0 text-truncate">
            #<t t-esc="option.label"/>
        </strong>
    </t>

    <t t-name="mail.Composer.suggestionChannelCommand">
        <strong class="px-2 py-1 align-self-center flex-shrink-0 text-truncate">
            <t t-esc="option.label"/>
        </strong>
        <em class="text-600 text-truncate align-self-center">
            <t t-esc="option.help"/>
        </em>
    </t>

    <t t-name="mail.Composer.suggestionCannedResponse">
        <strong class="px-2 py-1 align-self-center flex-shrink-0 text-truncate">
            <t t-esc="option.source"/>
        </strong>
        <em class="text-600 text-truncate align-self-center">
            <t t-esc="option.label"/>
        </em>
    </t>
</templates>
