<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

<t t-name="web.Legacy.FavoriteMenu" owl="1">
    <Dropdown class="'o_favorite_menu btn-group'" togglerClass="'btn btn-light'">
        <t t-set-slot="toggler">
            <i class="me-1" t-att-class="icon"/>
            <span class="o_dropdown_title">Favorites</span>
            <Dialog t-if="state.deletedFavorite"
                title="'Warning'"
                size="'medium'"
                onClosed="() => { state.deletedFavorite = false }"
                >
                <t t-if="state.deletedFavorite.userId">Are you sure that you want to remove this filter?</t>
                <t t-else="">This filter is global and will be removed for everybody if you continue.</t>
                <t t-set-slot="buttons">
                    <button type="button" class="btn btn-primary" t-on-click="_onRemoveFavorite">
                        <t>Ok</t>
                    </button>
                    <button type="button" class="btn btn-secondary" t-on-click.stop="() => { state.deletedFavorite = false }">
                        <t>Cancel</t>
                    </button>
                </t>
            </Dialog>
        </t>
        <t t-set="currentGroup" t-value="null"/>
        <t t-foreach="this.items" t-as="item" t-key="item.id or item.key">
            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                <div role="separator" class="dropdown-divider"/>
            </t>
            <t t-if="item.type ==='favorite'">
                <SearchDropdownItem class="{ o_menu_item: true, selected: item.isActive }"
                    checked="item.isActive"
                    parentClosingMode="'none'"
                    onSelected="() => this.onFavoriteSelected(item.id)"
                    >
                    <span class="d-flex p-0 align-items-center justify-content-between">
                        <t t-esc="item.description"/>
                        <i class="ms-1 o_icon_right fa fa-trash-o"
                            title="Delete item"
                            t-on-click.stop="() => this.openConfirmationDialog(item.id)"
                        />
                    </span>
                </SearchDropdownItem>
            </t>
            <t t-else="">
                <t t-component="item.Component" t-props="item.props"/>
            </t>
            <t t-set="currentGroup" t-value="item.groupNumber"/>
        </t>
    </Dropdown>
</t>

<t t-name="web.legacy.FilterMenu" owl="1">
    <Dropdown class="'o_filter_menu btn-group ' + props.class" togglerClass="'btn btn-light'">
        <t t-set-slot="toggler">
            <i class="me-1" t-att-class="icon"/>
            <span class="o_dropdown_title">Filters</span>
        </t>
        <t t-set="currentGroup" t-value="null"/>
        <t t-foreach="items" t-as="item" t-key="item.id">
            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                <div class="dropdown-divider" role="separator"/>
            </t>
            <t t-if="item.options">
                <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                    <t t-set-slot="toggler">
                        <t t-esc="item.description"/>
                    </t>
                    <t t-set="subGroup" t-value="null"/>
                    <t t-foreach="item.options" t-as="option" t-key="option.id">
                        <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                            <div class="dropdown-divider" role="separator"/>
                        </t>
                        <SearchDropdownItem class="{ o_item_option: true, selected: option.isActive }"
                            t-esc="option.description"
                            checked="option.isActive"
                            parentClosingMode="'none'"
                            onSelected="() => this.onFilterSelected({ itemId: item.id, optionId: option.id })"
                        />
                        <t t-set="subGroup" t-value="option.groupNumber"/>
                    </t>
                </Dropdown>
            </t>
            <t t-else="">
                <SearchDropdownItem class="{ o_menu_item: true, selected: item.isActive }"
                    checked="item.isActive"
                    parentClosingMode="'none'"
                    t-esc="item.description"
                    onSelected="() => this.onFilterSelected({ itemId: item.id })"
                />
            </t>
            <t t-set="currentGroup" t-value="item.groupNumber"/>
        </t>
        <t t-if="items.length">
            <div role="separator" class="dropdown-divider"/>
        </t>
        <CustomFilterItem fields="props.fields"/>
    </Dropdown>
</t>

<t t-name="web.legacy.ComparisonMenu" owl="1">
    <Dropdown class="'o_comparison_menu btn-group'" togglerClass="'btn btn-light'">
        <t t-set-slot="toggler">
            <i class="me-1" t-att-class="icon"/>
            <span class="o_dropdown_title">Comparison</span>
        </t>
        <t t-foreach="items" t-as="item" t-key="item.id">
            <SearchDropdownItem class="{ o_menu_item: true, selected: item.isActive }"
                checked="item.isActive"
                parentClosingMode="'none'"
                t-esc="item.description"
                onSelected="() => this.onComparisonSelected(item.id)"
            />
        </t>
    </Dropdown>
</t>

<t t-name="web.legacy.GroupByMenu" owl="1">
    <Dropdown class="'o_group_by_menu btn-group'"
        togglerClass="'btn btn-light'"
        t-props="dropdownProps"
    >
        <t t-set-slot="toggler">
            <i class="me-1" t-att-class="icon"/>
            <span class="o_dropdown_title">Group By<t t-if="props.showCaretDown"> <i class="fa fa-caret-down ms-1"/></t></span>
        </t>
        <t t-set="currentGroup" t-value="null"/>
        <t t-foreach="items" t-as="item" t-key="item.id">
            <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                <div class="dropdown-divider" role="separator"/>
            </t>
            <t t-if="item.options">
                <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                    <t t-set-slot="toggler">
                        <t t-esc="item.description"/>
                    </t>
                    <t t-set="subGroup" t-value="null"/>
                    <t t-foreach="item.options" t-as="option" t-key="option.id">
                        <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                            <div class="dropdown-divider" role="separator"/>
                        </t>
                        <SearchDropdownItem class="{ o_item_option: true, selected: option.isActive }"
                            checked="option.isActive ? true : false"
                            parentClosingMode="'none'"
                            t-esc="option.description"
                            onSelected="() => this.onGroupBySelected({ itemId: item.id, optionId: option.id})"
                        />
                        <t t-set="subGroup" t-value="option.groupNumber"/>
                    </t>
                </Dropdown>
            </t>
            <t t-else="">
                <SearchDropdownItem class="{ o_menu_item: true, selected: item.isActive }"
                    checked="item.isActive"
                    parentClosingMode="'none'"
                    t-esc="item.description"
                    onSelected="() => this.onGroupBySelected({ itemId: item.id })"
                />
            </t>
            <t t-set="currentGroup" t-value="item.groupNumber"/>
        </t>
        <t t-if="!hideCustomGroupBy and fields.length">
            <div t-if="items.length" role="separator" class="dropdown-divider"/>
            <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
        </t>
    </Dropdown>
</t>

</templates>
