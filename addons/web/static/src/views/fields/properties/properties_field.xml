<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <t t-name="web.PropertiesField" owl="1">
        <div t-ref="properties" class="row align-items-start"
            t-att-class="{'d-none': propertiesList.length === 0 and state.hideAddButton}">
            <t t-set="unfoldedSeparators" t-value="state.unfoldedSeparators"/>
            <t t-foreach="groupedPropertiesList" t-as="propertiesListGroup" t-key="propertiesListGroup_index">
                <t t-set="foldable" t-value="!!propertiesListGroup.title"/>
                <t t-set="isFolded" t-value="propertiesListGroup.name and !unfoldedSeparators.includes(propertiesListGroup.name)"/>
                <div class="o_inner_group grid col-lg-6">
                    <div
                        t-if="!propertiesListGroup.invisible"
                        class="o_field_property_label o_horizontal_separator mb-3 text-uppercase fw-bolder small d-flex flex-row align-items-baseline"
                        style="grid-column: 2 span; cursor: pointer; user-select: none"
                        t-on-click="() => this.onSeparatorClick(propertiesListGroup.name)"
                        t-att-property-name="propertiesListGroup.name || ''">
                        <div t-if="foldable">
                            <i class="fa me-1" t-att-class="{'fa-caret-down': !isFolded, 'fa-caret-right': isFolded}"/>
                        </div>
                        <span t-if="propertiesListGroup.title" t-out="propertiesListGroup.title"/>
                        <i
                            t-if="state.canChangeDefinition and !props.readonly and foldable"
                            class="o_field_property_open_popover fa fa-pencil ms-2"
                            t-on-click.prevent.stop="(event) => this.onPropertyEdit(event, propertiesListGroup.name)"/>
                    </div>
                    <div
                        t-foreach="propertiesListGroup.elements"
                        t-as="propertyConfiguration"
                        t-key="propertyConfiguration.name"
                        t-if="!isFolded || propertyConfiguration.nextProperty"
                        class="o_property_field mb-3"
                        t-att-class="propertyConfiguration.nextProperty and state.hideAddButton ? 'd-none': 'd-sm-contents'"
                        t-att-property-name="propertyConfiguration.name">
                        <div
                            t-if="propertyConfiguration.nextProperty"
                            class="o_field_property_add"
                            t-att-class="{'g-col-2': props.columns !== 1}">
                            <button
                                t-if="!props.readonly and state.canChangeDefinition"
                                class="btn btn-light text-muted text-break m-0"
                                t-on-click="onPropertyCreate">
                                <i class="fa fa-plus"/>
                                Add a Property
                            </button>
                        </div>
                        <t t-else="">
                            <t t-set="domId" t-value="generateUniqueDomID()"/>
                            <label
                                t-attf-class="o_field_property_label o_form_label text-break {{state.movedPropertyName === propertyConfiguration.name ? 'o_property_field_highlight' : ''}} d-flex align-items-center"
                                t-att-for="domId">
                                <b
                                    t-if="propertyConfiguration.string and propertyConfiguration.string.length"
                                    t-out="propertyConfiguration.string"
                                    class="text-900"/>
                                <i
                                    t-else="" class="o_field_property_empty_label">
                                    New Property
                                </i>
                                <i
                                    t-if="state.canChangeDefinition and !props.readonly"
                                    class="o_field_property_open_popover fa fa-pencil ms-2"
                                    t-on-click="(event) => this.onPropertyEdit(event, propertyConfiguration.name)"/>
                            </label>
                            <div class="o_property_field_value">
                                <PropertyValue
                                    id="domId"
                                    canChangeDefinition="state.canChangeDefinition"
                                    checkDefinitionWriteAccess.bind="checkDefinitionWriteAccess"
                                    comodel="propertyConfiguration.comodel || ''"
                                    context="props.context"
                                    domain="propertyConfiguration.domain || '[]'"
                                    readonly="props.readonly"
                                    selection="propertyConfiguration.selection"
                                    string="propertyConfiguration.string"
                                    tags="propertyConfiguration.tags"
                                    type="propertyConfiguration.type"
                                    value="propertyConfiguration.value"
                                    onChange.bind="(value) => this.onPropertyValueChange(propertyConfiguration.name, value)"
                                    onTagsChange.bind="(newTags, newValue) => this.onTagsChange(propertyConfiguration.name, newTags, newValue)"
                                />
                            </div>
                        </t>
                    </div>
                </div>
            </t>
        </div>
    </t>
</templates>
